function r(r,n){return function(r){if(Array.isArray(r))return r}(r)||function(r,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(r)))return;var n=[],e=!0,o=!1,i=void 0;try{for(var a,u=r[Symbol.iterator]();!(e=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);e=!0);}catch(r){o=!0,i=r}finally{try{e||null==u.return||u.return()}finally{if(o)throw i}}return n}(r,n)||function(r,n){if(!r)return;if("string"==typeof r)return t(r,n);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return t(r,n)}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=new Array(t);n<t;n++)e[n]=r[n];return e}export default function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=window.translations,o="Translation does not exist.",i=t.split(".").reduce((function(r,t){if(!r[t])throw new Error(o);return r[t]}),e);if("string"!=typeof i)throw new Error(o);var a=Object.entries(n).reduce((function(t,n){var e=r(n,2),o=e[0],i=e[1];return t.replace(new RegExp("({{\\s*".concat(o,"\\s*}}|%{").concat(o,"})")),i)}),i);return a}
